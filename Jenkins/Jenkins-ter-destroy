pipeline {
  agent any

  options {
    // Use the same persistent workspace that holds your Terraform state.
    ws('/var/jenkins_home/terraform-state')
  }

  stages {
    stage('Checkout') {
      steps {
        // Checkout the same repository that contains your Terraform code.
        git branch: 'master', url: 'https://github.com/NehorayHillel/flask_resume.git'
      }
    }

    stage('Terraform Destroy') {
      steps {
        dir('terraform/project2') {
          // Bind AWS credentials and the Jenkins public key so that Terraform can connect to AWS.
          withCredentials([
            [
              $class: 'AmazonWebServicesCredentialsBinding',
              credentialsId: 'aws-acces-key',
              accessKeyVariable: 'AWS_ACCESS_KEY_ID',
              secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
            ],
            string(credentialsId: 'jenkins-public-key', variable: 'PUBLIC_KEY')
          ]) {
            // Run terraform destroy. It will look for the state file in this directory.
            sh 'terraform destroy -var="jenkins_public_key=${PUBLIC_KEY}" -auto-approve'
          }
        }
      }
    }
  }

  post {
    always {
      // Archive the Terraform state file as an artifact for reference.
      archiveArtifacts artifacts: 'terraform/project2/terraform.tfstate', fingerprint: true
    }
  }
}
