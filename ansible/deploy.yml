---
- name: Deploy Flask Resume Application
  hosts: ec2
  become: true
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - git
          - docker.io
          - mysql-client
          - python3-pip
        state: present

    - name: Install Python MySQL library
      pip:
        name: 
          - PyMySQL
          - mysql-connector-python
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Create project directory
      file:
        path: /opt/flask_resume
        state: directory
        mode: '0755'

    - name: Clone the repository
      git:
        repo: https://github.com/NehorayHillel/flask_resume.git
        dest: /tmp/flask_resume

    - name: Copy Web directory to project directory
      copy:
        src: /tmp/flask_resume/Web/
        dest: /opt/flask_resume/Web/
        remote_src: yes

    - name: Copy DB directory to project directory
      copy:
        src: /tmp/flask_resume/DB/
        dest: /opt/flask_resume/DB/
        remote_src: yes

    - name: Create Docker network
      command: docker network create resume_network
      ignore_errors: yes
      register: network_result
      changed_when: network_result.rc == 0
      failed_when: network_result.rc != 0 and "already exists" not in network_result.stderr

    - name: Build Docker image
      command: docker build -t resume_web_image -f /opt/flask_resume/Web/Dockerfile-web /opt/flask_resume/Web/
      
    - name: Remove existing container if it exists
      command: docker rm -f resume_web
      ignore_errors: yes

    - name: Run Flask application container
      command: >
        docker run -d
        --name resume_web
        -p 0.0.0.0:5000:5000
        --env FLASK_ENV=development
        --env FLASK_APP=app.py
        --network resume_network
        resume_web_image

    - name: Wait for application to be ready
      wait_for:
        host: localhost
        port: 5000
        timeout: 30
      ignore_errors: yes

    - name: Show running containers
      command: docker ps
      register: docker_ps

    - name: Display running containers
      debug:
        var: docker_ps.stdout_lines